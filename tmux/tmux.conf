# prefix config
if-shell "[ -n \"$SSH_CONNECTION\" ]" {
  set -g prefix 'C-b' # remote
} {
  set -g prefix 'C-\' # local
}

set-environment -g TMUX_SCRIPTS "$TMUX_CONFIG_HOME/scripts"

# General
# -------

# feat
setw -g mouse on
# setw -g mode-keys vi
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*:Tc" # for TrueColor
set -sg escape-time 0 # remove delay of esc key
set -s set-clipboard external
set -as terminal-features 'screen-256color:clipboard'
set -g detach-on-destroy off # don't exit when other session existing
set -g focus-events on # focus event for nvim
set -g display-time 10000
set -g status-keys vi


set-hook -g pane-focus-out 'run-shell "echo pane-focus-in"'

# Key binding
# -----------

# move between pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind C-a last-window

# resize pane
bind -r > resize-pane -R 1
bind -r < resize-pane -L 1
bind -r + resize-pane -U 1
bind -r - resize-pane -D 1

# split pane
bind x split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi C-v send -X clear-selection \; \
                         send -X rectangle-toggle \; \
                         send -X begin-selection
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter \
#     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane \
#     send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# create window/session
bind c new-window -c '#{pane_current_path}'
bind C \
    run-shell 'tmux set-environment -g PANE_CURRENT_PATH #{pane_current_path}' \; \
    new-session ' \
      cd $(eval "$(tmux showenv -g PANE_CURRENT_PATH 2>/dev/null)"; echo $PANE_CURRENT_PATH); \
      zsh --login \
    '

# close window/session
bind D display-popup -E -w 40 -h 10 "$TMUX_SCRIPTS/close-session.sh"

# swap window
# bind g command-prompt -p 'Insert the current window to:' "run-shell '$HOME/.config/tmux/scripts/insert-window.sh %%'"
bind G run-shell "$TMUX_SCRIPTS/window-move-mode/enter_mode.sh"
bind g command-prompt -p 'Swap the current window to:' "swap-window -s %1; select-window -t %1"

source $TMUX_CONFIG_HOME/plugin.conf

# unused keys
# y u
# a
# b

# unnecessary keys
#

# Local Plugins

run-shell "$TMUX_CONFIG_HOME/local-plugins/paneshift.tmux/paneshift.tmux"
